"use strict";Vue.component("chat",{template:`<div id="content-wrap" style="padding:10px;">
                    <div class="panel panel-primary">
                        <div class="panel-heading" id="accordion">
                            <span class="glyphicon glyphicon-comment"></span> Chat
                            <div class="btn-group pull-right">
                                <span id="onlinehost"></span>
                            </div>
                        </div>
                        
                        <div class="panel-collapse collapse in chatparent" id="collapseOne">
                            <div class="chatlay">
                                <div class="content">
                                    <p class="radius"><img src="./images/chat-support.png" width="70px" style="display:inline" /></p>
                                    <input id="txtusername" type="text" v-on:keyup.enter="letsstart" maxlength="10" placeholder="What's your name?"></input><br />
                                    <button @click.prevent="letsstart" class="btn btn-info btn-sm" id="btnchatstart">Let's start...</button><br />
                                </div>
                            </div>
                            <div class="panel-body" id="chatcontent" style="height:250px;overflow-y:scroll">
                                <ul id="messagesList" class="chat" v-for="item in items" >
                                    <li class="left clearfix" v-html="item"></li>
                                </ul>
                            </div>
                            <div class="panel-footer">
                                <div>
                                    <input class="form-control input-sm" type="hidden" value="visitor" id="txtuser"/>
                                    <input class="form-control input-sm" type="hidden" value="" id="txtfriendlyname"/>
                                    <input id="txtmessage" v-on:keyup.enter="sendMessage" maxlength="250" type="text" class="form-control input-sm" placeholder="Type your message here..." />
                                    <span class="input-group-btn" style="text-align:right;padding-top:5px">
                                        <button @click.prevent="sendMessage"  class="btn btn-info btn-sm" id="btnsendmessage">
                                            Send
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>`,props:["accessKey","warning"],data:function(){return{connecition:null,access:this.accessKey,licensed:!1,items:[]}},created:function(){this.licensed=!0;console.log("Component is created.Please wait for connection.");console.log("Connecting...");this.connection=(new signalR.HubConnectionBuilder).withUrl("/Ntfctn?key="+this.accessKey).configureLogging(signalR.LogLevel.Information).build();this.connection.serverTimeoutInMilliseconds=3e5},mounted:function(){var n=this;if(this.licensed){n.connection.onclose(function(){$(".chatlay").show();console.log("Connecition is closed")});n.connection.on("GiveName",function(n){$("#txtuser").val(n);$(".chatlay").hide()});n.connection.on("SayHello",function(n){$("#onlinehost").html(n)});n.connection.on("ReceiveMessage",function(n,t){try{component.$refs.box?component.$refs.box.addMessage(t):console.error("Invalid ref value for component. Please keep 'ref=\"box\"' attribute as default.")}catch(i){console.log(i.message)}})}},methods:{letsstart:function(){var n=this;n.connection.start().then(()=>{console.log("Component is connected");var n=$("#txtusername").val();$("#txtfriendlyname").val(n)}).catch(n=>{console.log(n),$(".chatlay").show()})},sendMessage:function(){var t,i;try{var r=this,u=$("#txtuser").val(),f=$("#txtfriendlyname").val(),n=$("#txtmessage").val();$("#txtmessage").val("");t=$("chatcontent");t.scrollTop+=1e3;i={username:u,friendlyusername:f,message:n};n&&r.connection.invoke("SendPrivateMessage",i).catch(n=>console.error(n))}catch(e){console.log(e.message)}},addMessage:function(n){var t=this;t.items.push(n)}}});